variables:
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  DOCKER_REGISTRY: eyrie.comsys.rwth-aachen.de

image: docker:dind

before_script:
  - echo $CI_JOB_ID
  - echo $CI_RUNNER_ID
  - echo $CI_RUNNER_REVISION
  - echo $CI_RUNNER_TAGS
  - echo $CI_RUNNER_VERSION
  - echo $CI_RUNNER_DESCRIPTION
  - echo "$CI_PROJECT_NAME"
  - echo "$CI_PROJECT_NAMESPACE"
  - echo "$CI_PROJECT_PATH"
  - echo "$CI_PROJECT_PATH_SLUG"
  - echo "$CI_COMMIT_REF_NAME"
  - echo "$CI_COMMIT_REF_SLUG"
  - echo "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
  - echo "$CI_MERGE_REQUEST_TITLE"
  - 'dockerd-entrypoint.sh >/dev/null 2>&1 &'
  - 'DOCKERD_PID="$(jobs -l -p)"'
  - 'function kill_and_wait_for_docker { kill "$DOCKERD_PID" ; wait "$DOCKERD_PID" ; echo dockerd terminated gracefully ; }'
  - 'while if docker ps >/dev/null 2>&1 ; then false ; else true ; fi do echo waiting for dockerd startup... ; sleep 1 ; done'
  - 'trap kill_and_wait_for_docker EXIT'
  - 'echo started dockerd with driver "\"$DOCKER_DRIVER\""'
  - docker info
  - apk add python3

stages:
  - build

build-master:
  stage: build
  only:
    refs:
      - master
  script:
    - RELEASE_IMAGE_NAME=$DOCKER_REGISTRY/$CI_PROJECT_PATH_SLUG:latest
    - set +e
    - .gitlab-ci-src/run-ci.py --verbose --ccache-dir "/ccache" --cache-dir "/cache" --num-threads 8 --release-image=pre-build --release-image-name=$RELEASE_IMAGE_NAME
    - RES=$?
    - set -e
    - docker images
    - docker login -u $DOCKER_CI_USER -p $DOCKER_CI_AUTH $DOCKER_REGISTRY
    - docker push $RELEASE_IMAGE_NAME || true
    - exit $RES

build-not-master:
  stage: build
  except:
    refs:
      - master
  script:
    - FINAL_IMAGE_NAME=$DOCKER_REGISTRY/$CI_PROJECT_PATH_SLUG:$CI_COMMIT_REF_SLUG
    - set +e
    - .gitlab-ci-src/run-ci.py --verbose --ccache-dir "/ccache" --cache-dir "/cache" --num-threads 8 --final-image=$FINAL_IMAGE_NAME
    - RES=$?
    - set -e
    - docker images
    - docker login -u $DOCKER_CI_USER -p $DOCKER_CI_AUTH $DOCKER_REGISTRY
    - docker push $FINAL_IMAGE_NAME || true
    - exit $RES
